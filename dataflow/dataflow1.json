{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "db_stores_sql",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sateStoreAvgRating_sql",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as long,",
				"          alt_store_name_catch as string,",
				"          address_full as string,",
				"          address_state as string,",
				"          store_phone as long,",
				"          store_email as string,",
				"          business_hours_openi as string,",
				"          business_hours_closi as string,",
				"          averageRating as float,",
				"          totalReviews as long,",
				"          pincode as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 select(mapColumn(",
				"          address_state,",
				"          averageRating",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 aggregate(groupBy(address_state),",
				"     averageRating = iif(isNull(avg(averageRating)), 0.0, toFloat(avg(averageRating)))\r",
				") ~> aggregate1",
				"aggregate1 filter(address_state!=\"Tamilï¿½Nadu\") ~> filter1",
				"filter1 sort(asc(averageRating, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}