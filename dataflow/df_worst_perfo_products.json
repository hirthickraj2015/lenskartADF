{
	"name": "df_worst_perfo_products",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_products_sql",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable5",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join1"
				},
				{
					"name": "finalTableFormation"
				},
				{
					"name": "filter2"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as long,",
				"          product_url as string,",
				"          color as string,",
				"          size as string,",
				"          width as string,",
				"          brand_name_en as string,",
				"          model_name as string,",
				"          classification as string,",
				"          purchaseCount as string,",
				"          avgRating as float,",
				"          qty as long,",
				"          wishlistCount as long,",
				"          market_price as long,",
				"          lenskart_price as long,",
				"          totalNoOfRatings as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 derive(metrics = avgRating/totalNoOfRatings) ~> derivedColumn1",
				"filter2 aggregate(groupBy(id),",
				"     min_const = min(metrics)) ~> aggregate1",
				"aggregate1, derivedColumn1 join(aggregate1@id == source1@id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          id = aggregate1@id,",
				"          brand_name_en,",
				"          model_name,",
				"          classification,",
				"          avgRating,",
				"          lenskart_price,",
				"          totalNoOfRatings,",
				"          metrics,",
				"          desision_col = min_const",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> finalTableFormation",
				"derivedColumn1 filter(!isNull(metrics)) ~> filter2",
				"finalTableFormation sort(asc(avgRating, true),",
				"     desc(totalNoOfRatings, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}